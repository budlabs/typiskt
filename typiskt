#!/bin/bash

: "${XDG_CONFIG_HOME:=$HOME/.config}"
: "${TYPISKT_CONFIG_DIR:=$XDG_CONFIG_HOME/typiskt}"
: "${TYPISKT_CACHE:=$HOME/.cache/typiskt}"
: "${TYPISKT_TIME_FORMAT:="%y/%m/%d"}"
: "${TYPISKT_WIDTH:=50}"
: "${TYPISKT_LINES:=2}"
: "${TYPISKT_WORDLIST:=english}"
: "${TYPISKT_MIN_ACC:=96}"
: "${TYPISKT_MIN_WPM:=0}"

main() {

  declare -g _tmpE _source _dir

  _source="$(readlink -f "${BASH_SOURCE[0]}")"
  _dir="${_source%/*}"

  _tmpE=$(mktemp) # error messages get redirected to
                  # this file and content printed to stderr
                  # on exit.

  # in makefile m4 will expand ETC_CONFIG_DIR
  # before installation
  if [[ -d ETC_CONFIG_DIR ]]; then
    _sdir='ETC_CONFIG_DIR'
  else
    _sdir="$_dir/config"
  fi

  _bookmarkfile=""
  _exercisefile=""
  _underline=""
  _listhash=""
  _activeindent=""

  ((_o[list])) && listcorpuses

  declare -i _height _width _maxW _difficulty
  declare -i _activepos _nextpos _lastpos
  declare -i _time _t _oldstatus _bookmark
  declare -i _restart=1 _clicks=0 _badclicks=0
  declare -i _seed _lastexercise _start _gotscreen=0
  declare -i _underlinewidth=14 _resize=0 _number_of_lines
  declare -i _statuserror _statuscorrect _statusactive

  declare -g _details_keys _details_words
  declare -g _file_words_source

  declare -a exercises
  declare -a wordlist   # wordlist as array
  declare -a words      # ${wordlist[${words[-1]}]}=next
  declare -a wordmasks  # specialsfile as array
  declare -a activeline
  declare -a lines

  declare -A pos
  declare -A _c

  for k in {0..7}; do 
    _c[f$k]=$(tput setaf "$k")
    _c[b$k]=$(tput setab "$k")
  done

  _c[res]=$(tput sgr0)
  _c[sc]=$(tput sc)
  _c[rc]=$(tput rc)
  _c[civis]=$(tput civis)
  _c[cnorm]=$(tput cnorm)

  : "${_seed:=${_o[seed]:-$(od -An -N3 -i /dev/random)}}"
  RANDOM=$_seed

  declare -A m # prop mask array
  masks=(random difficulty time bookmark linebreak loop)
  for ((i=0;i<${#masks[@]};i++)); do 
    m[${masks[$i]}]=$((1<<i))
  done ; unset 'masks[@]'

  _mode=words
  [[ -n ${_o[exercise]}  ]] && _mode=exercise
  [[ -n ${_o[source]}    ]] && _mode=source
  [[ -n ${_o[book]}      ]] && _mode=book

  declare -i _prop # mode prpoperties
  case "$_mode" in
    words     ) _prop=$((m[random] | m[difficulty] | m[time] | m[loop])) ;;
    source    ) _prop=$((m[linebreak])) ;;
    exercise  ) _prop=$((0)) ;;
    book      ) _prop=$((m[difficulty] | m[time] | m[bookmark] | m[loop])) ;;
  esac

  parseconfig

  [[ -d $TYPISKT_CACHE ]] || mkdir -p "$TYPISKT_CACHE"

  makelist

  ((_prop & m[bookmark])) && {
    _bookmarkfile="$TYPISKT_CACHE/$_listhash"
    [[ -f $_bookmarkfile ]] || {
      echo 0 > "$_bookmarkfile"
    }
  }

  : "${_time:=${_o[time]:-60}}"
  ((_prop & m[time])) || _time=0
  
  ((_prop & m[difficulty])) && {

    _difficulty=$(( _o[difficulty] < 1  ? 0 : 
                    _o[difficulty] < 11 ? _o[difficulty] :
                    _o[difficulty] > 10 ? 10 : 0 ))

    [[ -f $_sdir/wordmasks ]] || _difficulty=0
    
    ((_difficulty)) && {
      mapfile -t wordmasks < "$_sdir/wordmasks"
      _difficulty=$(( ${#wordmasks[@]} * ((11-_difficulty) +4) ))
    }

  }

  initscreen

  while ((_restart)); do
    while ((_restart)); do starttest ; done
    results
  done

}

__dir=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")") #bashbud
source "$__dir/_init.sh"                              #bashbud
